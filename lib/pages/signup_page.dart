import 'package:app/services/firebase_auth_methods.dart';
import 'package:flutter/material.dart';
import 'package:google_fonts/google_fonts.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:http/http.dart' as http;
import 'dart:convert';

class EmailPasswordSignup extends StatefulWidget {
  static String routeName = '/signup-email-password';
  const EmailPasswordSignup({Key? key}) : super(key: key);

  @override
  _EmailPasswordSignupState createState() => _EmailPasswordSignupState();
}

class _EmailPasswordSignupState extends State<EmailPasswordSignup> {
  final TextEditingController emailController = TextEditingController();
  final TextEditingController otpController = TextEditingController();
  final TextEditingController passwordController = TextEditingController();
  final TextEditingController usernameController = TextEditingController();

  bool isOtpSent = false;
  bool isOtpVerified = false;
  String generatedOtp = ''; // This would be generated by the backend
  String generatedUsername = '';
  bool isLoading = false; // For loading state
  bool isIistian = true; // For radio button selection

  void verifyEmail() async {
    if (emailController.text.isEmpty) {
      showPopUpCard(
        context,
        "Please enter your email",
        () {
          Navigator.of(context).pop();
        },
      );
    } else {
      setState(() {
        isLoading = true; // Start loading
      });

      final url = Uri.parse(
          'https://conscientia.co.in/api/signup/sendOTP');
      final response = await http.post(
        url,
        headers: {'Content-Type': 'application/json'},
        body: json.encode({'email': emailController.text}),
      );

      setState(() {
        isLoading = false; // Stop loading
      });

      if (response.statusCode == 200) {
        final responseData = json.decode(response.body);
        generatedOtp = responseData['otp'].toString();
        generatedUsername = responseData['username'].toString();
        setState(() {
          isOtpSent = true;
        });
        showPopUpCard(
          context,
          "An OTP has been sent to your email. Please enter the OTP to verify your email.",
          () {
            Navigator.of(context).pop();
          },
        );

      } 

      else if (response.statusCode==201) { 
        showPopUpCard(
          context,
          "User Already Exists",
          () {
            Navigator.of(context).pop();
          },
        );
      }
      
      else {
        showPopUpCard(
          context,
          "Failed to send OTP. Please try again.",
          () {
            Navigator.of(context).pop();
          },
        );
      }
    }
  }

  void verifyOtp() {
    if (otpController.text == generatedOtp) {
      setState(() {
        isOtpVerified = true;
        usernameController.text =
            generatedUsername; // Simulate username from API
      });
    } else {
      showPopUpCard(
        context,
        "The OTP that you entered is wrong",
        () {
          Navigator.of(context).pop();
        },
      );
    }
  }

  void resendOtp() {
    // Simulate API request to resend OTP
    generatedOtp = '1234'; // Simulate received OTP from API again
    showPopUpCard(
      context,
      "A new OTP has been sent to your email.",
      () {
        Navigator.of(context).pop();
      },
    );
  }

  void signUpUser() async {
    if (passwordController.text.isEmpty) {
      showPopUpCard(
        context,
        "Please create your password",
        () {
          Navigator.of(context).pop();
        },
      );
    } else {
      setState(() {
        isLoading = true; // Start loading
      });

      try {
        UserCredential userCredential =
            await FirebaseAuthMethods(FirebaseAuth.instance).signUpWithEmail(
          email: emailController.text,
          password: passwordController.text,
          context: context,
        );

        final url =
            Uri.parse('https://conscientia.co.in/api/signup');
        final response = await http.post(
          url,
          headers: {'Content-Type': 'application/json'},
          body: json.encode({
            'currUser': {
              'email': (userCredential.user!.email).toString(),
              'uid': userCredential.user!.uid,
            },
            'username': generatedUsername,
            'iist': isIistian, // Sending the "iist" bool value
          }),
        );

        setState(() {
          isLoading = false; // Stop loading
        });

        if (response.statusCode == 200) {
          showPopUpCard(
            context,
            "Sign up successful!",
            () {
              Navigator.of(context).popUntil(
                        (route) => route.isFirst);
            },
          );
        } else {
          showPopUpCard(
            context,
            "Failed to sign up. Please try again.",
            () {
              Navigator.of(context).pop();
            },
          );
        }
      } catch (e) {
        setState(() {
          isLoading = false; // Stop loading in case of error
        });

        showPopUpCard(
          context,
          "Error: ${e.toString()}",
          () {
            Navigator.of(context).pop();
          },
        );
      }
    }
  }

  void showPopUpCard(
      BuildContext context, String message, VoidCallback onPressed) {
    showDialog(
      context: context,
      builder: (BuildContext context) {
        return AlertDialog(
          backgroundColor: Colors.black.withOpacity(0.8),
          content: Text(
            message,
            style: GoogleFonts.rubik(color: Colors.white),
          ),
          actions: [
            TextButton(
              onPressed: onPressed,
              child: Text(
                'OK',
                style: GoogleFonts.rubik(color: Colors.red),
              ),
            ),
          ],
        );
      },
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      // resizeToAvoidBottomInset: false,
      body: Stack(
        children: [
          Positioned.fill(
            child: Image.asset(
              'assets/images/login.jpg',
              fit: BoxFit.cover,
            ),
          ),
          Positioned.fill(
            child: Container(
              color: Colors.black.withOpacity(0.7),
            ),
          ),
          SafeArea(
            child: Padding(
              padding: const EdgeInsets.symmetric(horizontal: 20),
              child: Column(
                mainAxisAlignment: MainAxisAlignment.center,
                children: [
                  Text(
                    'SIGN UP',
                    style: GoogleFonts.rubik(
                      fontWeight: FontWeight.bold,
                      fontSize: 24,
                      color: Colors.white,
                    ),
                  ),
                  SizedBox(height: 20),
                  if (!isOtpSent) ...[
                    TextField(
                      controller: emailController,
                      style: GoogleFonts.rubik(color: Colors.white),
                      decoration: InputDecoration(
                        hintStyle: GoogleFonts.rubik(color: Colors.white54),
                        hintText: 'Enter Email',
                        prefixIcon: Icon(Icons.email, color: Colors.white),
                        filled: true,
                        fillColor: Color.fromARGB(132, 0, 0, 0),
                        border: OutlineInputBorder(
                          borderRadius: BorderRadius.circular(10),
                          borderSide: BorderSide.none,
                        ),
                      ),
                    ),
                    SizedBox(height: 20),
                    Row(
                      children: [
                        Spacer(),
                        Text(
                          "IISTian",
                          style: GoogleFonts.rubik(color: Colors.white),
                        ),
                        Radio<bool>(
                          value: true,
                          groupValue: isIistian,
                          onChanged: (value) {
                            setState(() {
                              isIistian = value!;
                            });
                          },
                        ),
                        SizedBox(width: 30,),
                        Text(
                          "Non IISTian",
                          style: GoogleFonts.rubik(color: Colors.white),
                        ),
                        Radio<bool>(
                          focusColor: Colors.red,
                          value: false,
                          groupValue: isIistian,
                          onChanged: (value) {
                            setState(() {
                              isIistian = value!;
                            });
                          },
                        ),
                        Spacer()
                      ],
                    ),
                    SizedBox(height: 20),
                    ElevatedButton(
                      onPressed: verifyEmail,
                      style: ElevatedButton.styleFrom(
                        backgroundColor: Colors.red,
                        padding:
                            EdgeInsets.symmetric(horizontal: 50, vertical: 15),
                        shape: RoundedRectangleBorder(
                          borderRadius: BorderRadius.circular(10),
                        ),
                      ),
                      child: isLoading
                          ? Row(
                              mainAxisAlignment: MainAxisAlignment.center,
                              children: [
                                SizedBox(
                              
                                  child: CircularProgressIndicator(
                                    
                                    color: Colors.white),
                                ),
                                SizedBox(width: 10),
                                Text(
                                  'Please wait',
                                  style: GoogleFonts.rubik(color: Colors.white),
                                ),
                              ],
                            )
                          : Text(
                              'Verify Email',
                              style: GoogleFonts.rubik(
                                color: Colors.white,
                                fontWeight: FontWeight.bold,
                              ),
                            ),
                    ),
                  ],
                  if (isOtpSent && !isOtpVerified) ...[
                    TextField(
                      controller: otpController,
                      style: GoogleFonts.rubik(color: Colors.white),
                      decoration: InputDecoration(
                        hintStyle: GoogleFonts.rubik(color: Colors.white54),
                        hintText: 'Enter OTP',
                        prefixIcon: Icon(Icons.lock, color: Colors.white),
                        filled: true,
                        fillColor: Color.fromARGB(132, 0, 0, 0),
                        border: OutlineInputBorder(
                          borderRadius: BorderRadius.circular(10),
                          borderSide: BorderSide.none,
                        ),
                      ),
                      keyboardType: TextInputType.number,
                      maxLength: 4,
                    ),
                    SizedBox(height: 20),
                    ElevatedButton(
                      onPressed: verifyOtp,
                      style: ElevatedButton.styleFrom(
                        backgroundColor: Colors.red,
                        padding:
                            EdgeInsets.symmetric(horizontal: 100, vertical: 15),
                        shape: RoundedRectangleBorder(
                          borderRadius: BorderRadius.circular(10),
                        ),
                      ),
                      child: Text(
                        'Verify OTP',
                        style: GoogleFonts.rubik(
                          color: Colors.white,
                          fontWeight: FontWeight.bold,
                        ),
                      ),
                    ),
                    SizedBox(height: 20),
                    TextButton(
                      onPressed: resendOtp,
                      child: Text(
                        'Resend OTP',
                        style: GoogleFonts.rubik(color: Colors.red),
                      ),
                    ),
                  ],
                  if (isOtpVerified) ...[
                    TextField(
                      controller: usernameController,
                      style: GoogleFonts.rubik(color: Colors.white),
                      decoration: InputDecoration(
                        hintStyle: GoogleFonts.rubik(color: Colors.white54),
                        hintText: 'Username',
                        prefixIcon: Icon(Icons.person, color: Colors.white),
                        filled: true,
                        fillColor: Color.fromARGB(132, 0, 0, 0),
                        border: OutlineInputBorder(
                          borderRadius: BorderRadius.circular(10),
                          borderSide: BorderSide.none,
                        ),
                      ),
                      readOnly: true,
                    ),
                    SizedBox(height: 20),
                    TextField(
                      controller: passwordController,
                      style: GoogleFonts.rubik(color: Colors.white),
                      decoration: InputDecoration(
                        hintStyle: GoogleFonts.rubik(color: Colors.white54),
                        hintText: 'Create Password',
                        prefixIcon: Icon(Icons.lock, color: Colors.white),
                        filled: true,
                        fillColor: Color.fromARGB(132, 0, 0, 0),
                        border: OutlineInputBorder(
                          borderRadius: BorderRadius.circular(10),
                          borderSide: BorderSide.none,
                        ),
                      ),
                      obscureText: true,
                    ),
                    SizedBox(height: 20),
                    ElevatedButton(
                      onPressed: signUpUser,
                      style: ElevatedButton.styleFrom(
                        backgroundColor: Colors.red,
                        padding:
                            EdgeInsets.symmetric(horizontal: 40, vertical: 15),
                        shape: RoundedRectangleBorder(
                          borderRadius: BorderRadius.circular(10),
                        ),
                      ),
                      child: isLoading
                          ? Row(
                              mainAxisAlignment: MainAxisAlignment.center,
                              children: [
                                SizedBox(
                              
                                  child: CircularProgressIndicator(
                                    
                                    color: Colors.white),
                                ),
                                SizedBox(width: 10),
                                Text(
                                  'Please wait',
                                  style: GoogleFonts.rubik(color: Colors.white),
                                ),
                              ],
                            )
                          : Text(
                              'Sign Up',
                              style: GoogleFonts.rubik(
                                color: Colors.white,
                                fontWeight: FontWeight.bold,
                              ),
                            ),
                    ),
                  ],
                ],
              ),
            ),
          ),
        ],
      ),
    );
  }
}
